#!/bin/bash

STDOUT=0

set -e

#set fd to fd or fdfind depending on which is installed
command -v fdfind &> /dev/null && fd=fdfind || fd=fd

# handle mutliple commandline flags -f -h and -c
while getopts ":fhs" opt; do
  case $opt in
    h)
      echo "Usage: fzf_open_code [-f] [-h] [-c]"
      echo "  -h: show this help message"
      echo "  -s: pass to stdout instead of opening in vscode"
      exit 0
      ;;
    s)
      STDOUT=1
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

DIRS=$($fd -t d -i -H --no-ignore "^.git$" -E '.github' ~/dev | sed 's/......$//')
results=()
for dir in $DIRS; do
  branch=$(git -C "$dir" branch --show-current )
  results+=("$dir:$branch")
done
DIR=$(printf '%s\n' "${results[@]}" | fzf --preview='git -C $(echo {} | cut -d: -f1) status' --preview-window=right:50%)
DIR=$(echo $DIR | cut -d: -f1)

# If dir is empty exit
if [[ -z "$DIR" ]]; then
  exit 1
fi

if [[ $STDOUT -eq 1 ]]; then
  echo "$DIR"
  exit 0
fi

# if dir contains devcontainer.json open in devcontainer else vscode
if [[ -f "$DIR/.devcontainer/devcontainer.json" ]]; then
  devcontainer open "$DIR"
else
  code "$DIR"
fi
